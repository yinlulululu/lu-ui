import{_ as t}from"./Container.aba3277e.js";import{_ as n}from"./Button.f4de5e64.js";import{d as o,c as e,e as l,F as s,o as u,y as a,k as c,w as d,j as i,l as m}from"./vendor.6cd36be9.js";import{_ as r}from"./Attr.226aa56e.js";var p={components:{LuButton:n},methods:{top(){this.$toast("弹出提示内容")},middle(){this.$toast("弹出提示内容",{position:"middle"})},bottom(){this.$toast("弹出提示内容",{position:"bottom"})}}};function b(t){t.__sourceCode='<template>\n  <lu-button theme="success" @click="top">上方弹出</lu-button>\n  <lu-button theme="warning" @click="middle">中间弹出</lu-button>\n  <lu-button theme="success" @click="bottom">下方弹出</lu-button>\n</template>\n<script lang="ts">\nimport LuButton from \'@/lib/Button/Button.vue\'\nexport default {\n  components: {\n    LuButton\n  },\n  methods: {\n    top() {\n      this.$toast(\'弹出提示内容\')\n    },\n    middle() {\n      this.$toast(\'弹出提示内容\', { position: \'middle\' })\n    },\n    bottom() {\n      this.$toast(\'弹出提示内容\', { position: \'bottom\' })\n    }\n  }\n}\n<\/script>',t.__sourceCodeTitle=" 基础使用 "}const f=c("上方弹出"),h=c("中间弹出"),_=c("下方弹出");b(p),p.render=function(t,n,c,d,i,m){const r=o("lu-button");return u(),e(s,null,[l(r,{theme:"success",onClick:m.top},{default:a((()=>[f])),_:1},8,["onClick"]),l(r,{theme:"warning",onClick:m.middle},{default:a((()=>[h])),_:1},8,["onClick"]),l(r,{theme:"success",onClick:m.bottom},{default:a((()=>[_])),_:1},8,["onClick"])],64)};var B={components:{LuButton:n},methods:{middle(){this.$toast("弹出提示内容",{position:"middle",autoClose:"5"})}}};function C(t){t.__sourceCode="<template>\n  <lu-button theme=\"warning\" @click=\"middle\">中间弹出5s</lu-button>\n</template>\n    \n<script lang=\"ts\">\nimport LuButton from '@/lib/Button/Button.vue'\nexport default {\n  components: {\n    LuButton\n  },\n  methods: {\n    middle() {\n      this.$toast('弹出提示内容', { position: 'middle', autoClose: '5' })\n    }\n  }\n}\n<\/script>",t.__sourceCodeTitle=" 自定义弹出时间 "}const k=c("中间弹出5s");C(B),B.render=function(t,n,l,s,c,d){const i=o("lu-button");return u(),e(i,{theme:"warning",onClick:d.middle},{default:a((()=>[k])),_:1},8,["onClick"])};var v={components:{LuButton:n},methods:{middle(){this.$toast("弹出提示内容",{position:"middle",closeButton:{text:"确定",callback:()=>{alert("回调的输出")}}})}}};function T(t){t.__sourceCode="<template>\n  <lu-button theme=\"error\" @click=\"middle\">中间弹出</lu-button>\n</template>\n    \n<script lang=\"ts\">\nimport LuButton from '@/lib/Button/Button.vue'\nexport default {\n  components: {\n    LuButton\n  },\n  methods: {\n    middle() {\n      this.$toast('弹出提示内容', {\n        position: 'middle',\n        closeButton: {\n          text: '确定',\n          callback: () => {\n            alert('回调的输出')\n          }\n        }\n      })\n    }\n  }\n}\n<\/script>",t.__sourceCodeTitle=" 自定义关闭按钮 "}const L=c("中间弹出");T(v),v.render=function(t,n,l,s,c,d){const i=o("lu-button");return u(),e(i,{theme:"error",onClick:d.middle},{default:a((()=>[L])),_:1},8,["onClick"])};var $={components:{LuButton:n},methods:{middle(){this.$toast('<div style="color: #1b1f23">弹出内容</div>',{enableHtml:!0})}}};function g(t){t.__sourceCode='<template>\n  <lu-button theme="warning" @click="middle">弹出黑色字体</lu-button>\n</template>\n    \n<script lang="ts">\nimport LuButton from \'@/lib/Button/Button.vue\'\nexport default {\n  components: {\n    LuButton\n  },\n  methods: {\n    middle() {\n      this.$toast(`<div style="color: #1b1f23">弹出内容</div>`, {\n        enableHtml: true\n      })\n    }\n  }\n}\n<\/script>',t.__sourceCodeTitle=" 支持HTML "}const x=c("弹出黑色字体");g($),$.render=function(t,n,l,s,c,d){const i=o("lu-button");return u(),e(i,{theme:"warning",onClick:d.middle},{default:a((()=>[x])),_:1},8,["onClick"])};var H={components:{Container:t,Attr:r},setup:()=>({data:[{params:"position",desc:"弹出位置",type:"string",select:"top / middle / bottom",default:"top"},{params:"autoClose",desc:"弹出时间",type:"number",select:"number",default:"2"},{params:"closeButton",desc:"关闭按钮",type:"{text, callback}",select:"",default:"{text:'关闭',callback:undefined}"},{params:"enableHtml",desc:"支持HTML",type:"boolean",select:"true / false",default:"false"}],ToastBase:p,ToastAuto:B,ToastButton:v,ToastHtml:$})};const w=d();i("data-v-b24456a0");const y={class:"lu-toast-demo"},j=l("h1",null,"Toast 提示框",-1),A=l("p",null,[c(" 可以使用"),l("code",null,"position"),c("属性定义"),l("code",null,"toast"),c("弹出位置，可选择默认"),l("code",null,"top"),c("或者"),l("code",null,"middle"),l("code",null,"bottom"),c("。 ")],-1),M=l("p",null,[c(" 可以使用"),l("code",null,"autoClose"),c("属性定义"),l("code",null,"toast"),c("弹出时间，它接收一个"),l("code",null,"Number"),c("类型。 ")],-1),F=l("p",null,[c(" 可以使用"),l("code",null,"closeButton"),c("属性自定义"),l("code",null,"toast"),c("关闭内容以及回调执行，它接收一个"),l("code",null,"{text, callback}")],-1),I=l("p",null,[c(" 可以使用"),l("code",null,"enableHtml"),c("属性自定义"),l("code",null,"toast"),c("支持HTML写法，它接收一个"),l("code",null,"Boolean"),c("值。 ")],-1);m();const N=w(((t,n,s,a,c,d)=>{const i=o("Container"),m=o("Attr");return u(),e("div",y,[j,l(i,{component:a.ToastBase},{default:w((()=>[A])),_:1},8,["component"]),l(i,{component:a.ToastAuto},{default:w((()=>[M])),_:1},8,["component"]),l(i,{component:a.ToastButton},{default:w((()=>[F])),_:1},8,["component"]),l(i,{component:a.ToastHtml},{default:w((()=>[I])),_:1},8,["component"]),l(m,{data:a.data},null,8,["data"])])}));H.render=N,H.__scopeId="data-v-b24456a0";export default H;
