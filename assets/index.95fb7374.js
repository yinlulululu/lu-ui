import{_ as e}from"./Container.aba3277e.js";import{c as n,e as t,w as a,j as p,l as s,o as l,r as u,d as o,t as d,F as r,k as c}from"./vendor.6cd36be9.js";import{_ as i}from"./Attr.226aa56e.js";var m={name:"lu-input",props:{placeholder:{type:String,default:""},type:{type:String,default:"text"},name:{type:String,default:""},disabled:{type:Boolean,default:!1},value:{type:String,default:""}},setup:(e,n)=>({handleInput:e=>{n.emit("update:value",e.target.value)}})};const v=a();p("data-v-2dd0f76a");const f={class:"lu-input"};s();const I=v(((e,a,p,s,u,o)=>(l(),n("div",f,[t("input",{class:["lu-input__inner",{"is-disabled":p.disabled}],type:p.type,placeholder:p.placeholder,name:p.name,disabled:p.disabled,value:p.value,onInput:a[1]||(a[1]=(...e)=>s.handleInput&&s.handleInput(...e))},null,42,["type","placeholder","name","disabled","value"])]))));m.render=I,m.__scopeId="data-v-2dd0f76a";var x={name:"InputBase",components:{LuInput:m},setup:e=>({text:u("")})};function _(e){e.__sourceCode='<template>\n  <lu-input placeholder="请输入内容" v-model:value="text" />\n  <span class="picked">{{ text }}</span>\n</template>\n    \n    <script lang="ts">\nimport { ref } from \'vue\'\nimport LuInput from \'@/lib/Input/Input.vue\'\n\nexport default {\n  name: \'InputBase\',\n  components: { LuInput },\n  setup(props: any) {\n    const text = ref(\'\')\n    return { text }\n  }\n}\n<\/script>\n    \n<style lang="scss" scoped>\n.picked {\n  padding: 10px 15px;\n}\n</style>',e.__sourceCodeTitle=" 基础用法-双向绑定 "}const y=a();p("data-v-57634286");const b={class:"picked"};s();const g=y(((e,a,p,s,u,c)=>{const i=o("lu-input");return l(),n(r,null,[t(i,{placeholder:"请输入内容",value:s.text,"onUpdate:value":a[1]||(a[1]=e=>s.text=e)},null,8,["value"]),t("span",b,d(s.text),1)],64)}));_(x),x.render=g,x.__scopeId="data-v-57634286";var h={name:"InputText",components:{LuInput:m},setup:e=>({text:u("")})};function w(e){e.__sourceCode='<template>\n  <lu-input placeholder="文本类型" v-model:value="text" />\n  <span class="picked">{{ text }}</span>\n</template>\n    \n    <script lang="ts">\nimport { ref } from \'vue\'\nimport LuInput from \'@/lib/Input/Input.vue\'\n\nexport default {\n  name: \'InputText\',\n  components: { LuInput },\n  setup(props: any) {\n    const text = ref(\'\')\n    return { text }\n  }\n}\n<\/script>\n    \n<style lang="scss" scoped>\n.picked {\n  padding: 10px 15px;\n}\n</style>',e.__sourceCodeTitle=" 文本类型 "}const L=a();p("data-v-11a2102f");const k={class:"picked"};s();const C=L(((e,a,p,s,u,c)=>{const i=o("lu-input");return l(),n(r,null,[t(i,{placeholder:"文本类型",value:s.text,"onUpdate:value":a[1]||(a[1]=e=>s.text=e)},null,8,["value"]),t("span",k,d(s.text),1)],64)}));w(h),h.render=C,h.__scopeId="data-v-11a2102f";var T={name:"InputPassword",components:{LuInput:m},setup:e=>({password:u("")})};function B(e){e.__sourceCode='<template>\n  <lu-input placeholder="密码类型" type="password" v-model:value="password" />\n  <span class="picked">{{ password }}</span>\n</template>\n    \n    <script lang="ts">\nimport { ref } from \'vue\'\nimport LuInput from \'@/lib/Input/Input.vue\'\n\nexport default {\n  name: \'InputPassword\',\n  components: { LuInput },\n  setup(props: any) {\n    const password = ref(\'\')\n    return { password }\n  }\n}\n<\/script>\n    \n<style lang="scss" scoped>\n.picked {\n  padding: 10px 15px;\n}\n</style>',e.__sourceCodeTitle=" 密码类型 "}const j=a();p("data-v-063f6c8a");const D={class:"picked"};s();const P=j(((e,a,p,s,u,c)=>{const i=o("lu-input");return l(),n(r,null,[t(i,{placeholder:"密码类型",type:"password",value:s.password,"onUpdate:value":a[1]||(a[1]=e=>s.password=e)},null,8,["value"]),t("span",D,d(s.password),1)],64)}));B(T),T.render=P,T.__scopeId="data-v-063f6c8a";var S={name:"InputDisable",components:{LuInput:m},setup:e=>({text:u("")})};function U(e){e.__sourceCode="<template>\n  <lu-input placeholder=\"禁用\" v-model:value=\"text\" disabled />\n</template>\n    \n<script lang=\"ts\">\nimport { ref } from 'vue'\nimport LuInput from '@/lib/Input/Input.vue'\n\nexport default {\n  name: 'InputDisable',\n  components: { LuInput },\n  setup(props: any) {\n    const text = ref('')\n    return { text }\n  }\n}\n<\/script>\n    \n<style lang=\"scss\" scoped>\n.picked {\n  padding: 10px 15px;\n}\n</style>",e.__sourceCodeTitle=" 支持禁用 "}const A=a()(((e,t,a,p,s,u)=>{const d=o("lu-input");return l(),n(d,{placeholder:"禁用",value:p.text,"onUpdate:value":t[1]||(t[1]=e=>p.text=e),disabled:""},null,8,["value"])}));U(S),S.render=A,S.__scopeId="data-v-3505d224";var F={components:{Container:e,Attr:i},setup:()=>({data:[{params:"placeholder",desc:"占位符",type:"string",select:"任意字符串",default:"null"},{params:"name",desc:"name属性",type:"string",select:"任意字符串",default:"null"},{params:"type",desc:"文本框类型",type:"string",select:"支持所有原生input的类型",default:"text"},{params:"disabled",desc:"禁用",type:"boolean",select:"false/true",default:"false"}],InputBase:x,InputText:h,InputPassword:T,InputDisable:S})};const q=a();p("data-v-13492a84");const z={class:"lu-input-demo"},E=t("h1",null,"Input 输入框",-1),G=t("p",null,[c("可以使用"),t("code",null,"v-model"),c("实现"),t("code",null,"双向绑定")],-1),H=t("p",null,[t("code",null,"Input"),c("输入框默认属性为"),t("code",null,"文本类型")],-1),J=t("p",null,[c("可以使用"),t("code",null,"password"),c("属性实现显示隐藏的密码框")],-1),K=t("p",null,[c("可以使用"),t("code",null,"v-model"),c("实现"),t("code",null,"双向绑定")],-1);s();const M=q(((e,a,p,s,u,d)=>{const r=o("Container"),c=o("Attr");return l(),n("div",z,[E,t(r,{component:s.InputBase},{default:q((()=>[G])),_:1},8,["component"]),t(r,{component:s.InputText},{default:q((()=>[H])),_:1},8,["component"]),t(r,{component:s.InputPassword},{default:q((()=>[J])),_:1},8,["component"]),t(r,{component:s.InputDisable},{default:q((()=>[K])),_:1},8,["component"]),t(c,{data:s.data},null,8,["data"])])}));F.render=M,F.__scopeId="data-v-13492a84";export default F;
